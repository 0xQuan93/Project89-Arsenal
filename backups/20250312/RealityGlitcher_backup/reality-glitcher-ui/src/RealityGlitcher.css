/* Reality Glitcher custom styling */
.cyber-bg {
    background-color: #0a0a1e;
    background-image: 
      radial-gradient(rgba(0, 20, 100, 0.2) 1px, transparent 1px),
      linear-gradient(rgba(0, 20, 100, 0.1) 1px, transparent 1px);
    background-size: 20px 20px, 20px 20px;
    background-position: 0 0, 10px 10px;
    position: relative;
  }
  
  .cyber-bg::before {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: linear-gradient(0deg, rgba(0, 0, 30, 0.9) 0%, rgba(0, 0, 40, 0.4) 100%);
    pointer-events: none;
    z-index: -1;
  }
  
  .cyber-text-glow {
    text-shadow: 
      0 0 5px rgba(101, 210, 255, 0.5),
      0 0 10px rgba(101, 210, 255, 0.3);
  }
  
  .cyber-border {
    position: relative;
    box-shadow: 
      0 0 10px rgba(0, 70, 200, 0.3),
      inset 0 0 10px rgba(0, 70, 200, 0.2);
    overflow: hidden;
    background: linear-gradient(to bottom, rgba(10, 20, 60, 0.7), rgba(5, 10, 40, 0.9)) !important;
    border-color: rgba(0, 80, 220, 0.5) !important;
    border-width: 1px !important;
  }
  
  .cyber-border::after {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: linear-gradient(45deg, transparent 96%, #0066cc 98%);
    pointer-events: none;
    z-index: 1;
  }
  
  .neon-pulse {
    animation: neon-pulse 3s infinite alternate;
  }
  
  @keyframes neon-pulse {
    0% {
      filter: blur(2px) brightness(1);
      transform: scale(1);
    }
    50% {
      filter: blur(3px) brightness(1.2);
      transform: scale(1.02);
    }
    100% {
      filter: blur(2px) brightness(1);
      transform: scale(1);
    }
  }
  
  .visual-glitch {
    position: relative;
    display: inline-block;
  }
  
  .visual-glitch::before,
  .visual-glitch::after {
    content: attr(data-text);
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    clip: rect(0, 0, 0, 0);
  }
  
  .visual-glitch::before {
    left: 2px;
    text-shadow: -1px 0 #ff00cc;
    animation: glitch-animation-1 2s infinite linear alternate-reverse;
  }
  
  .visual-glitch::after {
    left: -2px;
    text-shadow: 2px 0 #00ccff;
    animation: glitch-animation-2 3s infinite linear alternate-reverse;
  }
  
  @keyframes glitch-animation-1 {
    0% {
      clip: rect(36px, 9999px, 58px, 0);
    }
    5% {
      clip: rect(21px, 9999px, 47px, 0);
    }
    10% {
      clip: rect(2px, 9999px, 10px, 0);
    }
    15% {
      clip: rect(36px, 9999px, 22px, 0);
    }
    20% {
      clip: rect(19px, 9999px, 28px, 0);
    }
    25% {
      clip: rect(11px, 9999px, 1px, 0);
    }
    30% {
      clip: rect(11px, 9999px, 39px, 0);
    }
    35% {
      clip: rect(26px, 9999px, 33px, 0);
    }
    40% {
      clip: rect(9px, 9999px, 8px, 0);
    }
    45% {
      clip: rect(31px, 9999px, 7px, 0);
    }
    50% {
      clip: rect(7px, 9999px, 40px, 0);
    }
    55% {
      clip: rect(61px, 9999px, 3px, 0);
    }
    60% {
      clip: rect(31px, 9999px, 36px, 0);
    }
    65% {
      clip: rect(13px, 9999px, 8px, 0);
    }
    70% {
      clip: rect(19px, 9999px, 61px, 0);
    }
    75% {
      clip: rect(28px, 9999px, 26px, 0);
    }
    80% {
      clip: rect(5px, 9999px, 57px, 0);
    }
    85% {
      clip: rect(35px, 9999px, 9px, 0);
    }
    90% {
      clip: rect(25px, 9999px, 15px, 0);
    }
    95% {
      clip: rect(32px, 9999px, 18px, 0);
    }
    100% {
      clip: rect(25px, 9999px, 16px, 0);
    }
  }
  
  @keyframes glitch-animation-2 {
    0% {
      clip: rect(32px, 9999px, 42px, 0);
    }
    5% {
      clip: rect(27px, 9999px, 4px, 0);
    }
    10% {
      clip: rect(56px, 9999px, 39px, 0);
    }
    15% {
      clip: rect(14px, 9999px, 6px, 0);
    }
    20% {
      clip: rect(1px, 9999px, 18px, 0);
    }
    25% {
      clip: rect(42px, 9999px, 40px, 0);
    }
    30% {
      clip: rect(12px, 9999px, 58px, 0);
    }
    35% {
      clip: rect(36px, 9999px, 31px, 0);
    }
    40% {
      clip: rect(38px, 9999px, 27px, 0);
    }
    45% {
      clip: rect(2px, 9999px, 39px, 0);
    }
    50% {
      clip: rect(72px, 9999px, 13px, 0);
    }
    55% {
      clip: rect(31px, 9999px, 12px, 0);
    }
    60% {
      clip: rect(20px, 9999px, 70px, 0);
    }
    65% {
      clip: rect(39px, 9999px, 44px, 0);
    }
    70% {
      clip: rect(55px, 9999px, 7px, 0);
    }
    75% {
      clip: rect(38px, 9999px, 67px, 0);
    }
    80% {
      clip: rect(7px, 9999px, 34px, 0);
    }
    85% {
      clip: rect(10px, 9999px, 12px, 0);
    }
    90% {
      clip: rect(38px, 9999px, 53px, 0);
    }
    95% {
      clip: rect(25px, 9999px, 31px, 0);
    }
    100% {
      clip: rect(44px, 9999px, 37px, 0);
    }
  }
  
  .cyber-grid {
    background-image: 
      linear-gradient(rgba(0, 123, 255, 0.1) 1px, transparent 1px),
      linear-gradient(90deg, rgba(0, 123, 255, 0.1) 1px, transparent 1px);
    background-size: 20px 20px;
    background-position: center center;
  }

/* Dial control animations */
@keyframes dial-glow {
  0% {
    filter: drop-shadow(0 0 2px rgba(57, 255, 20, 0.5));
  }
  50% {
    filter: drop-shadow(0 0 5px rgba(57, 255, 20, 0.8));
  }
  100% {
    filter: drop-shadow(0 0 2px rgba(57, 255, 20, 0.5));
  }
}

.dial-indicator {
  animation: dial-glow 2s ease-in-out infinite;
}

.dial-active {
  animation: dial-glow 0.5s ease-in-out infinite;
}

/* Add this to improve the grabbable cursor appearance */
.cursor-grab {
  cursor: grab;
}

.cursor-grabbing {
  cursor: grabbing;
}

/* Add this to support bg-opacity-* and text-opacity-* utilities */

/* RealityGlitcher.css */
@import url('https://fonts.googleapis.com/css2?family=Share+Tech+Mono&display=swap');

/* Base styles */
body {
  margin: 0;
  font-family: 'Share Tech Mono', monospace;
  background-color: #000;
  color: #64ffda;
  height: 100vh;
  overflow-x: hidden;
}

/* Scrollbar styling */
.scrollbar::-webkit-scrollbar {
  width: 5px;
  height: 5px;
}

.scrollbar::-webkit-scrollbar-track {
  background: rgba(0, 0, 0, 0.2);
  border-radius: 10px;
}

.scrollbar::-webkit-scrollbar-thumb {
  background: rgba(59, 130, 246, 0.5);
  border-radius: 10px;
}

.scrollbar::-webkit-scrollbar-thumb:hover {
  background: rgba(59, 130, 246, 0.8);
}

/* Terminal background */
.terminal-bg {
  background-color: #050510;
  background-image: 
    linear-gradient(rgba(17, 27, 50, 0.7) 50%, transparent 50%);
  background-size: 100% 4px;
  background-repeat: repeat;
  position: relative;
}

.terminal-bg::before {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: radial-gradient(circle at center, transparent 60%, rgba(0, 0, 30, 0.8) 100%);
  pointer-events: none;
}

/* Slider styling */
.cyber-slider {
  appearance: none;
  height: 6px;
  background: linear-gradient(90deg, #001428 0%, #0066cc 100%);
  border-radius: 3px;
  outline: none;
  border: 1px solid #164870;
  box-shadow: 0 0 5px rgba(0, 123, 255, 0.3);
}

.cyber-slider::-webkit-slider-thumb {
  appearance: none;
  width: 16px;
  height: 16px;
  border-radius: 50%;
  background: #64ffda;
  cursor: pointer;
  box-shadow: 
    0 0 3px #64ffda,
    0 0 6px rgba(100, 255, 218, 0.5);
  border: 1px solid #164870;
}

/* Mind Mirror specific styling */
.mind-mirror-badge {
  display: inline-block;
  padding: 2px 5px;
  border-radius: 4px;
  font-size: 10px;
  font-weight: bold;
  background: linear-gradient(135deg, #9c27b0, #673ab7);
  color: white;
  box-shadow: 0 0 5px rgba(156, 39, 176, 0.5);
  margin-left: 6px;
  vertical-align: middle;
}

.mind-mirror-card {
  border-left: 3px solid #a742e0 !important;
  background: linear-gradient(to right, rgba(137, 42, 226, 0.15), rgba(30, 41, 59, 0.2)) !important;
}

/* Progress bars */
.progress-bar-green {
  background-color: #5cff5c !important;
  height: 100%;
}

.progress-bar-yellow {
  background-color: #ffdc3c !important;
  height: 100%;
}

.progress-bar-red {
  background-color: #ff4c4c !important;
  height: 100%;
}

.progress-bar-purple {
  background-color: #a742e0 !important;
  height: 100%;
}

/* Data section styling */
.data-value-good {
  color: #5cff5c;
  font-weight: bold;
}

.data-value-caution {
  color: #ffdc3c;
  font-weight: bold;
}

.data-value-danger {
  color: #ff4c4c;
  font-weight: bold;
}

.data-value-special {
  color: #a742e0;
  font-weight: bold;
}

/* Glitch card styling */
.glitch-card {
  background-color: rgba(10, 20, 60, 0.8);
  border: 1px solid rgba(0, 80, 220, 0.5);
  border-radius: 0.25rem;
  padding: 0.75rem;
  transition: all 0.2s ease;
}

.glitch-card.selected {
  background-color: rgba(20, 30, 80, 0.9);
  border-color: rgba(20, 110, 255, 0.8);
  box-shadow: 0 0 10px rgba(0, 70, 230, 0.4);
}

.glitch-card.mind-mirror {
  border-left: 3px solid #a742e0;
  background: linear-gradient(to right, rgba(60, 20, 100, 0.5), rgba(10, 20, 60, 0.8));
}

/* Button styling */
.cyber-button {
  background-color: rgba(20, 50, 150, 0.5);
  border: 1px solid rgba(0, 80, 220, 0.7);
  color: #64c8ff;
  transition: all 0.2s ease;
}

.cyber-button:hover {
  background-color: rgba(30, 70, 180, 0.6);
  box-shadow: 0 0 8px rgba(0, 100, 255, 0.4);
}

.cyber-button-primary {
  background-color: rgba(0, 90, 220, 0.6);
  border: 1px solid rgba(30, 120, 255, 0.8);
}

.cyber-button-primary:hover {
  background-color: rgba(20, 110, 255, 0.7);
}

/* Anomaly section */
.anomaly-section {
  margin-top: 1rem;
  padding-top: 0.5rem;
  border-top: 1px solid rgba(0, 80, 220, 0.5);
}

.anomaly-text {
  color: #64c8ff;
  font-family: 'Share Tech Mono', monospace;
  font-size: 0.85rem;
}

.anomaly-highlight {
  color: #a742e0;
}

/* Fullscreen mode styles */
.fullscreen-mode {
  width: 100vw !important;
  height: 100vh !important;
  overflow: auto;
}

.fullscreen-mode .cyber-text-glow {
  text-shadow: 
    0 0 8px rgba(101, 210, 255, 0.7),
    0 0 15px rgba(101, 210, 255, 0.5);
  transition: text-shadow 0.3s ease;
}

.fullscreen-mode .cyber-border {
  box-shadow: 
    0 0 15px rgba(0, 70, 200, 0.5),
    inset 0 0 15px rgba(0, 70, 200, 0.3);
  transition: box-shadow 0.3s ease;
}

.fullscreen-mode .visual-glitch {
  animation-duration: 1.5s;
}

/* Responsive design for fullscreen */
@media (max-width: 768px) {
  .fullscreen-mode {
    padding: 0.5rem !important;
  }
  
  .fullscreen-mode h1 {
    font-size: 1.75rem !important;
  }
}

/* Persistent Reality Overlay effects */

/* Visual overlays */
.reality-overlay-visual {
  position: relative;
}

.reality-overlay-visual::before {
  content: "";
  position: fixed;
  inset: 0;
  background: 
    repeating-linear-gradient(
      90deg, 
      rgba(0, 0, 0, 0), 
      rgba(0, 255, 255, 0.03) 1px, 
      rgba(0, 0, 0, 0) 2px
    );
  pointer-events: none;
  z-index: 100;
  animation: visual-scan 8s linear infinite;
}

.reality-overlay-visual::after {
  content: "";
  position: fixed;
  inset: 0;
  background: radial-gradient(
    circle at 50% 50%,
    transparent 90%,
    rgba(0, 255, 255, 0.1) 100%
  );
  pointer-events: none;
  z-index: 101;
  animation: pulse-glow 5s ease-in-out infinite;
}

.reality-overlay-visual.reality-overlay-intense::before {
  background: 
    repeating-linear-gradient(
      90deg, 
      rgba(0, 0, 0, 0), 
      rgba(0, 255, 255, 0.07) 1px, 
      rgba(0, 0, 0, 0) 2px
    );
}

@keyframes visual-scan {
  0% {
    background-position: 0 0;
  }
  100% {
    background-position: 100px 0;
  }
}

@keyframes pulse-glow {
  0%, 100% {
    opacity: 0.5;
  }
  50% {
    opacity: 0.8;
  }
}

/* Temporal overlays */
.reality-overlay-temporal {
  position: relative;
}

.reality-overlay-temporal * {
  animation: temporal-stutter 10s infinite !important;
}

.reality-overlay-temporal.reality-overlay-intense * {
  animation: temporal-stutter-intense 7s infinite !important;
}

@keyframes temporal-stutter {
  0%, 100% {
    opacity: 1;
    filter: none;
  }
  
  19.5%, 20.5% {
    opacity: 0.8;
    filter: hue-rotate(30deg);
  }
  
  39.5%, 40.5% {
    opacity: 0.9;
    filter: hue-rotate(-20deg);
  }
  
  69.5%, 70.5% {
    opacity: 0.7;
    filter: hue-rotate(15deg) brightness(1.2);
  }
}

@keyframes temporal-stutter-intense {
  0%, 100% {
    opacity: 1;
    filter: none;
    transform: scale(1);
  }
  
  19.5%, 20.5% {
    opacity: 0.7;
    filter: hue-rotate(45deg);
    transform: scale(1.01);
  }
  
  39.5%, 40.5% {
    opacity: 0.8;
    filter: hue-rotate(-30deg) brightness(1.2);
    transform: scale(0.99);
  }
  
  59.5%, 60.5% {
    opacity: 0.9;
    filter: invert(0.1);
    transform: scale(1.01);
  }
  
  79.5%, 80.5% {
    opacity: 0.7;
    filter: hue-rotate(20deg) saturate(1.5);
    transform: scale(0.98);
  }
}

/* Spatial overlays */
.reality-overlay-spatial {
  transform-style: preserve-3d;
  perspective: 1000px;
}

.reality-overlay-spatial .cyber-border {
  animation: spatial-warp 15s infinite;
  transform-origin: center;
}

.reality-overlay-spatial.reality-overlay-intense .cyber-border {
  animation: spatial-warp-intense 12s infinite;
}

@keyframes spatial-warp {
  0%, 100% {
    transform: rotateX(0deg) rotateY(0deg);
  }
  25% {
    transform: rotateX(1deg) rotateY(0.5deg);
  }
  50% {
    transform: rotateX(0deg) rotateY(1deg);
  }
  75% {
    transform: rotateX(-0.5deg) rotateY(0deg);
  }
}

@keyframes spatial-warp-intense {
  0%, 100% {
    transform: rotateX(0deg) rotateY(0deg) scale(1);
  }
  25% {
    transform: rotateX(2deg) rotateY(1deg) scale(0.99);
  }
  50% {
    transform: rotateX(0.5deg) rotateY(2deg) scale(1.01);
  }
  75% {
    transform: rotateX(-1deg) rotateY(-0.5deg) scale(0.98);
  }
}

/* Auditory overlays */
.reality-overlay-auditory {
  position: relative;
}

.reality-overlay-auditory::before {
  content: "";
  position: fixed;
  bottom: 0;
  left: 0;
  right: 0;
  height: 10vh;
  background: linear-gradient(to top, rgba(167, 139, 250, 0.1), transparent);
  pointer-events: none;
  z-index: 100;
  animation: auditory-pulse 3s infinite;
}

.reality-overlay-auditory.reality-overlay-intense::before {
  height: 20vh;
  background: linear-gradient(to top, rgba(167, 139, 250, 0.2), transparent);
}

@keyframes auditory-pulse {
  0%, 100% {
    opacity: 0.5;
    height: 5vh;
  }
  50% {
    opacity: 0.8;
    height: 10vh;
  }
}

/* Cognitive overlays */
.reality-overlay-cognitive {
  position: relative;
}

.reality-overlay-cognitive::before {
  content: "";
  position: fixed;
  inset: 0;
  background: 
    radial-gradient(
      circle at 70% 30%,
      rgba(248, 113, 113, 0.1) 0%,
      transparent 50%
    ),
    radial-gradient(
      circle at 30% 70%,
      rgba(248, 113, 113, 0.1) 0%,
      transparent 50%
    );
  pointer-events: none;
  z-index: 100;
  animation: cognitive-shift 15s infinite;
}

.reality-overlay-cognitive.reality-overlay-intense::before {
  background: 
    radial-gradient(
      circle at 70% 30%,
      rgba(248, 113, 113, 0.2) 0%,
      transparent 60%
    ),
    radial-gradient(
      circle at 30% 70%,
      rgba(248, 113, 113, 0.2) 0%,
      transparent 60%
    );
}

@keyframes cognitive-shift {
  0%, 100% {
    background-position: 0% 0%, 100% 100%;
  }
  50% {
    background-position: 100% 0%, 0% 100%;
  }
}

/* Cognitive Distortion Type Specific Effects */
.reality-overlay-confirmation_bias p,
.reality-overlay-confirmation_bias h1,
.reality-overlay-confirmation_bias h2,
.reality-overlay-confirmation_bias h3 {
  position: relative;
}

.reality-overlay-confirmation_bias p::after,
.reality-overlay-confirmation_bias h1::after,
.reality-overlay-confirmation_bias h2::after,
.reality-overlay-confirmation_bias h3::after {
  content: "";
  position: absolute;
  bottom: -2px;
  left: 0;
  width: 100%;
  height: 2px;
  background: linear-gradient(to right, transparent, rgba(248, 113, 113, 0.3), transparent);
  animation: confirmation-underline 5s infinite;
}

@keyframes confirmation-underline {
  0%, 100% {
    opacity: 0.2;
    width: 0%;
    left: 0;
  }
  50% {
    opacity: 0.8;
    width: 100%;
    left: 0;
  }
}

.reality-overlay-black_white_thinking {
  filter: contrast(1.1) saturate(0.9);
}

.reality-overlay-catastrophizing .cyber-border {
  animation: catastrophize-pulse 8s infinite;
}

@keyframes catastrophize-pulse {
  0%, 100% {
    box-shadow: 
      0 0 10px rgba(0, 70, 200, 0.3),
      inset 0 0 10px rgba(0, 70, 200, 0.2);
  }
  10%, 15% {
    box-shadow: 
      0 0 10px rgba(200, 0, 0, 0.4),
      inset 0 0 10px rgba(200, 0, 0, 0.3);
  }
  60%, 65% {
    box-shadow: 
      0 0 15px rgba(200, 0, 0, 0.4),
      inset 0 0 15px rgba(200, 0, 0, 0.3);
  }
}

.reality-overlay-emotional_reasoning {
  position: relative;
}

.reality-overlay-emotional_reasoning::before {
  content: "";
  position: fixed;
  inset: 0;
  background: radial-gradient(
    circle at center,
    transparent 0%,
    rgba(248, 113, 113, 0.05) 70%,
    rgba(248, 113, 113, 0.1) 100%
  );
  pointer-events: none;
  z-index: 100;
  animation: emotional-pulse 10s infinite;
}

@keyframes emotional-pulse {
  0%, 100% {
    opacity: 0.3;
    transform: scale(1);
  }
  50% {
    opacity: 0.7;
    transform: scale(1.2);
  }
}

.reality-overlay-filtering {
  filter: saturate(0.8) brightness(0.95);
}

.reality-overlay-filtering button,
.reality-overlay-filtering .cyber-button {
  filter: saturate(1.5) brightness(1.1);
}

/* Synchronistic overlays */
.reality-overlay-synchronistic {
  position: relative;
}

.reality-overlay-synchronistic .cyber-border {
  position: relative;
}

.reality-overlay-synchronistic .cyber-border::after {
  content: "";
  position: absolute;
  inset: 0;
  background: radial-gradient(
    circle at var(--mouse-x, 50%) var(--mouse-y, 50%),
    rgba(232, 121, 249, 0.15) 0%,
    transparent 50%
  );
  pointer-events: none;
  z-index: 1;
}

.reality-overlay-synchronistic.reality-overlay-intense .cyber-border::after {
  background: radial-gradient(
    circle at var(--mouse-x, 50%) var(--mouse-y, 50%),
    rgba(232, 121, 249, 0.25) 0%,
    transparent 70%
  );
}

/* Track mouse position for synchronistic effect */
.reality-overlay-synchronistic {
  --mouse-x: 50%;
  --mouse-y: 50%;
}

/* Cross-modal effects */
.reality-overlay-cross-visual.reality-overlay-auditory,
.reality-overlay-cross-auditory.reality-overlay-visual {
  position: relative;
}

.reality-overlay-cross-visual.reality-overlay-auditory button,
.reality-overlay-cross-auditory.reality-overlay-visual button {
  animation: cross-modal-pulse 4s infinite;
}

@keyframes cross-modal-pulse {
  0%, 100% {
    filter: hue-rotate(0deg);
  }
  50% {
    filter: hue-rotate(20deg);
  }
}

.reality-overlay-cross-cognitive button,
.reality-overlay-cross-cognitive .cyber-button {
  position: relative;
  overflow: hidden;
}

.reality-overlay-cross-cognitive button::after,
.reality-overlay-cross-cognitive .cyber-button::after {
  content: "";
  position: absolute;
  top: 0;
  left: -100%;
  width: 100%;
  height: 100%;
  background: linear-gradient(
    to right,
    transparent 0%,
    rgba(248, 113, 113, 0.2) 50%,
    transparent 100%
  );
  animation: cross-cognitive-scan 5s infinite;
}

@keyframes cross-cognitive-scan {
  0%, 100% {
    left: -100%;
  }
  50% {
    left: 100%;
  }
}

/* General intensity modifiers */
.reality-overlay-subtle {
  opacity: 0.7;
}

.reality-overlay-moderate {
  opacity: 1;
}

.reality-overlay-intense {
  opacity: 1;
  animation-duration: 0.8s !important;
}

/* Dialog tweaks for persistent overlays */
.reality-overlay-visual dialog,
.reality-overlay-temporal dialog,
.reality-overlay-spatial dialog {
  backdrop-filter: blur(3px);
}

/* Cyber Button Styles */
.cyber-button {
  background-color: rgba(0, 20, 80, 0.5);
  border: 1px solid rgba(0, 120, 255, 0.5);
  color: rgba(100, 200, 255, 1);
  padding: 0.5rem 1rem;
  border-radius: 4px;
  transition: all 0.2s ease;
  cursor: pointer;
}

.cyber-button:hover {
  background-color: rgba(0, 40, 100, 0.6);
  border-color: rgba(0, 140, 255, 0.7);
}

.cyber-button-primary {
  background-color: rgba(0, 60, 120, 0.6);
  border: 1px solid rgba(0, 140, 255, 0.7);
}

.cyber-button-primary:hover {
  background-color: rgba(0, 80, 140, 0.7);
  border-color: rgba(0, 160, 255, 0.8);
}

/* Custom scrollbar */
.scrollbar::-webkit-scrollbar {
  width: 8px;
  height: 8px;
}

.scrollbar::-webkit-scrollbar-track {
  background: rgba(0, 30, 60, 0.5);
  border-radius: 4px;
}

.scrollbar::-webkit-scrollbar-thumb {
  background: rgba(0, 100, 200, 0.5);
  border-radius: 4px;
}

.scrollbar::-webkit-scrollbar-thumb:hover {
  background: rgba(0, 130, 255, 0.6);
}

/* Terminal background */
.terminal-bg {
  background-color: rgba(0, 10, 20, 0.9);
  position: relative;
  border-radius: 3px;
}

.terminal-bg::before {
  content: "";
  position: absolute;
  inset: 0;
  background: linear-gradient(
    0deg,
    transparent 0%,
    rgba(0, 40, 100, 0.05) 50%,
    transparent 100%
  );
  pointer-events: none;
  animation: scan-line 2s linear infinite;
}

@keyframes scan-line {
  0% {
    transform: translateY(-100%);
  }
  100% {
    transform: translateY(100%);
  }
}

/* Cyber slider styling */
.cyber-slider {
  -webkit-appearance: none;
  appearance: none;
  height: 6px;
  background: rgba(0, 40, 80, 0.6);
  border-radius: 3px;
  outline: none;
}

.cyber-slider::-webkit-slider-thumb {
  -webkit-appearance: none;
  appearance: none;
  width: 16px;
  height: 16px;
  background: rgba(0, 120, 255, 0.8);
  border-radius: 50%;
  border: 1px solid rgba(100, 200, 255, 0.7);
  cursor: pointer;
  box-shadow: 0 0 5px rgba(0, 150, 255, 0.5);
}

.cyber-slider::-webkit-slider-thumb:hover {
  background: rgba(0, 150, 255, 0.9);
  box-shadow: 0 0 8px rgba(0, 180, 255, 0.7);
}

/* Mind Mirror integration styling */
.mind-mirror-badge {
  background: linear-gradient(
    135deg,
    rgba(139, 92, 246, 0.4) 0%,
    rgba(168, 85, 247, 0.6) 100%
  );
  border: 1px solid rgba(168, 85, 247, 0.5);
  color: rgba(216, 180, 254, 1);
  padding: 0.25rem 0.5rem;
  border-radius: 4px;
  font-size: 0.75rem;
  font-weight: bold;
  display: inline-block;
}

.mind-mirror-card {
  border-color: rgba(139, 92, 246, 0.6) !important;
  background: linear-gradient(
    to bottom,
    rgba(91, 33, 182, 0.3),
    rgba(76, 29, 149, 0.5)
  ) !important;
}

/* Progress bar colors */
.progress-bar-green {
  background-color: rgba(52, 211, 153, 0.8);
  height: 100%;
  transition: width 0.5s ease-in-out;
}

.progress-bar-yellow {
  background-color: rgba(251, 191, 36, 0.8);
  height: 100%;
  transition: width 0.5s ease-in-out;
}

.progress-bar-red {
  background-color: rgba(239, 68, 68, 0.8);
  height: 100%;
  transition: width 0.5s ease-in-out;
}

.progress-bar-purple {
  background-color: rgba(168, 85, 247, 0.8);
  height: 100%;
  transition: width 0.5s ease-in-out;
}

/* Data value stylings */
.data-value-good {
  color: rgba(52, 211, 153, 1);
  font-weight: bold;
}

.data-value-caution {
  color: rgba(251, 191, 36, 1);
  font-weight: bold;
}

.data-value-danger {
  color: rgba(239, 68, 68, 1);
  font-weight: bold;
}

.data-value-special {
  color: rgba(168, 85, 247, 1);
  font-weight: bold;
}

/* Glitch card styling */
.glitch-card {
  background: rgba(0, 20, 40, 0.5);
  border: 1px solid rgba(0, 120, 200, 0.5);
  border-radius: 6px;
  transition: all 0.3s ease;
  overflow: hidden;
}

.glitch-card.selected {
  background: rgba(0, 30, 60, 0.7);
  border-color: rgba(0, 150, 255, 0.8);
  box-shadow: 0 0 10px rgba(0, 120, 255, 0.3);
}

.glitch-card.mind-mirror {
  background: rgba(76, 29, 149, 0.4);
  border-color: rgba(139, 92, 246, 0.6);
}

.glitch-card.mind-mirror.selected {
  background: rgba(91, 33, 182, 0.5);
  border-color: rgba(168, 85, 247, 0.8);
  box-shadow: 0 0 10px rgba(139, 92, 246, 0.4);
}

/* Advanced glitch card styling */
.glitch-card.advanced {
  background: linear-gradient(135deg, rgba(20, 30, 60, 0.5), rgba(60, 20, 70, 0.5));
  border: 1px solid rgba(150, 120, 220, 0.5);
}

.glitch-card.advanced.selected {
  background: linear-gradient(135deg, rgba(30, 40, 80, 0.7), rgba(80, 30, 90, 0.7));
  border-color: rgba(180, 140, 250, 0.8);
  box-shadow: 0 0 10px rgba(150, 120, 220, 0.3);
}

.glitch-card.advanced.cross-modal {
  background: linear-gradient(135deg, rgba(30, 40, 80, 0.5), rgba(80, 30, 90, 0.5), rgba(30, 80, 90, 0.5));
}

.glitch-card.persistent {
  position: relative;
  overflow: hidden;
}

.glitch-card.persistent::before {
  content: "";
  position: absolute;
  top: -5px;
  right: -5px;
  width: 50px;
  height: 50px;
  background: linear-gradient(135deg, transparent 40%, rgba(150, 120, 220, 0.6) 60%);
  z-index: 2;
}

/* Anomaly sections for visual interest */
.anomaly-section {
  position: relative;
  overflow: hidden;
  border: 1px solid rgba(0, 120, 200, 0.3);
  border-radius: 4px;
  padding: 1rem;
}

.anomaly-section::before {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  height: 2px;
  background: linear-gradient(to right, transparent, rgba(0, 150, 255, 0.5), transparent);
}

.anomaly-text {
  position: relative;
  display: inline-block;
  color: rgba(100, 200, 255, 1);
  font-family: monospace;
  letter-spacing: 0.1em;
}

.anomaly-text::after {
  content: "";
  position: absolute;
  bottom: -2px;
  left: 0;
  width: 100%;
  height: 1px;
  background: rgba(100, 200, 255, 0.4);
}

.anomaly-highlight {
  background: rgba(0, 100, 200, 0.1);
  border-bottom: 1px dashed rgba(100, 200, 255, 0.4);
  color: rgba(150, 220, 255, 1);
}

/* Anomaly fade-in animation */
@keyframes fadeIn {
  from {
    opacity: 0;
    transform: translateY(10px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

.animate-fade-in {
  animation: fadeIn 0.6s forwards;
  opacity: 1 !important;
}